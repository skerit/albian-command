@import "topsoil/less/topsoil.less";
@import "progress-bar.less";

@color-one : #262932;
@color-two : #3c414f;

@color-main-bg: @color-one;
@color-anchor-bg: @color-one;
@color-sidebar-bg: @color-two;
@color-tr-odd: @color-two;
@color-s16col-bg: @color-two;
@color-context-bg: @color-two;
@color-letter-header-bg: @color-two;
@color-accordion-header-bg: @color-two;
@color-form-bg: @color-two;

@color-range-bg: @color-one;
@color-range-thumb: lighten(@color-two, 10%);

body {
	min-height: 100vh;
	background: @color-main-bg;
	color: #ffffff;
	overflow: hidden;
}

main {
	height: 100vh;
	overflow-y: auto;
}

a {
	text-decoration: none;
	color: inherit;
}

form {
	background: @color-form-bg;
}

button {
	border: none;
	color: white;
	background-color: @color-range-thumb;
	padding: 1rem;
	font-weight: bold;
}

input {
	padding: 1rem;
	color: black;
}

blockquote {
	font: 14px/22px normal helvetica, sans-serif;
	margin-top: 10px;
	margin-bottom: 10px;
	padding-left: 15px;
	border-left: 3px solid #ccc;
}

x-svg {
	// -webkit prefix is still needed:
	// internal Google crawlers still use old webkit versions
	display: -webkit-inline-flex;
	display: inline-flex;

	svg {
		width: 100%;
		height: 100%;
	}
}

[data-badge]:not([data-badge=""]) {
	position: relative;

	&:after {
		content: attr(data-badge);
		position: absolute;
		top:4px;
		left:13px;
		font-size:.7em;
		background: #FF0000;
		color:white;
		width:18px;height:18px;
		text-align:center;
		line-height:18px;
		border-radius:15px;
		box-shadow:0 0 1px #333;
		padding: 3px;
		font-weight: bold;
	}
}

.flex-center {
	display: flex;
	align-content: center;
	align-items: center;
}

// Hide tabpages by default
.tabpage:not(.active) {
	display: none;
}

.tilerow {
	.flexParent();
	margin: 1rem -1rem;

	>* {
		.flexChild(1 1);
		padding: 1rem;
		background-color: @color-two;
		margin: 0 1rem;
	}
}

.sidebar {
	.flexChild(0 0 16rem);
	.flexParent(column, flex-start);

	min-height: 100vh;
	background: @color-sidebar-bg;

	> * {
		.flexChild(0 0 auto);
		font-size: 1.3rem;
	}

	.links {
		.flexChild(1 1);
		.flexParent(column, flex-start);

		> *:not(.children) {
			.flexChild(0 0 auto);
			padding: 1rem;
		}
	}

	x-svg {
		width: 1.25em;
		color: white;
		height: 1em;
	}

	.children {
		display: none;

		> *:not(.children) {
			.flexChild(0 0 auto);
			padding: 1rem 1rem 1rem 2rem;
		}
	}

	.children.active,
	.links a.active + .children {
		.flexChild(0 0 auto);
		.flexParent(column, flex-start);
	}

	#worldname {
		text-align: center;
		margin: 0.5rem;
		border-bottom: 1px solid @color-main-bg;
		font-size: 2rem;
	}

	#worldname,
	.bottombuttons {
		padding: 1rem;
	}

	a {
		font-size: 1.5rem;
		min-width: 92%;

		&:hover,
		&.active {
			background-color: @color-anchor-bg;

			s16-image {
				-webkit-filter: initial;
			}
		}
	}

	.speed {
		margin-top: 10px;
	}

	s16-image {
		line-height: 0;
		margin: -39px -3px -7px -2px;
		padding: 0;
		width: 34px;
		-webkit-filter: grayscale(1);
		display: inline-block;

		canvas {
			display: block;
			margin: 0;
		}
	}
}

.cage {
	.flexChild(1 0 auto);
	.flexParent();
}

.stored-list,
.warped-list {
	.field-received,
	.field-name {
		padding: 0 0.5rem;
	}
}

.eggs-list,
.peers-list,
.stored-list,
.warped-list,
.creatures-list {

	.field-username,
	.head-username {
		padding: 1rem;
		text-align: left;
	}

	.creatures-thead th:not(:empty) {
		padding: 0 10px 10px;
	}

	tbody:nth-child(odd) tr {
		background-color: @color-tr-odd;

		.action {
			background-color: @color-main-bg;
		}
	}

	tbody tr:hover {
		background-color: lighten(@color-main-bg, 15%);
	}

	tbody tr.selected {
		background-color: lighten(@color-main-bg, 30%);
	}

	td.field-picture {
		.flexParent(row, center);
		min-width: 125px;
		min-height: 90px;
		align-items: center;
	}

	.field-age {
		white-space: nowrap;
	}

	.field-age,
	.field-lifestage,
	.field-health,
	.field-status,
	.field-n,
	.field-drive {
		text-align: right;
		padding: 0 0.5rem;
	}

	.head-age,
	.field-age {
		text-align: right;
	}

	.head-lifestage,
	.field-lifestage {
		text-align: center;
	}

	.head-health,
	.field-health {
		text-align: center;
	}

	.head-status,
	.field-status {
		text-align: center;
	}

	.head-drive,
	.field-drive {
		text-align: right;
	}

	.field-drive {
		max-width: 80px;
		text-align: left;
	}

	.field-status {
		min-width: 80px;
		text-align: center;
	}

	.head-status {
		text-align: center;
	}

	.head-name {
		text-align: left;
		padding-left: 0 !important;
	}

	.head-moniker,
	.field-moniker {
		text-align: right !important;
		padding-right: 11px !important;
	}
}

// Hide the inseminate action for male creatures
// Or creatures that are too young to be pregnant
[data-gender="male"],
[data-lifestage="Baby"],
[data-lifestage="Child"],
tbody[data-pregnant] {
	.actions-row [data-action="inseminate"] {
		display: none;
	}
}

// Hide the pregnancy action for non-pregnant creatures
tbody:not([data-pregnant]) .actions-row [data-action="pregnancy"] {
	display: none;
}

#eggs .field-moniker {
	text-align: left !important;
	padding-right: 0.5rem !important;
}

table {
	width: 100%;

	th {
		text-align: left;
		padding: 0 0 10px;
	}

	&.sortable {
		th {
			cursor: pointer;
		}
	}
}

#settings .settings-list {
	tbody tr:nth-child(odd) {
		background-color: @color-tr-odd;

		.action {
			background-color: @color-main-bg;
		}
	}

	tbody tr:hover {
		background-color: lighten(@color-main-bg, 15%);
	}

	tbody tr.selected {
		background-color: lighten(@color-main-bg, 30%);
	}

	tbody td {

		> * {
			display: inline-block;
			vertical-align: middle;
			padding: 1rem;
		}
	}
}

.actions-row {
	td {
		padding: 1rem;
	}

	.action {
		background-color: @color-two;
		display: inline-block;
	}

	.warped-message {
		background-color: @color-two;
		display: inline-block;
	}
}

.settings-generic-actions .actions-row td,
.creatures-generic-actions .actions-row td {
	padding: 1rem 0 !important;
}

.action {
	.flexParent(column);
	padding: 1rem;
	cursor: pointer;
	text-align: center;
	height: 10rem;
	width: 11rem;
	margin-bottom: 1rem;

	s16-image {
		.flexChild(1 1);
		.flexParent(row, center);
		align-self: center;
		height: 6rem;
	}

	span {
		display: inline-block;
		margin-top: 1rem;
	}

	&.mousedown {
		background-color: lighten(@color-main-bg, 35%) !important;
	}
}

.action:not(:last-child),
.warped-message:not(:last-child) {
	margin-right: 1rem;
}

.warped-message {
	vertical-align: bottom;
	.flexParent(column);
	padding: 1rem;
	text-align: left;
	height: 10rem;
	width: 38rem;
	margin-bottom: 1rem;
}

s16-collection {
	animation: fixfit 0.1s normal;

	.flexParent(column);
	padding: 0.5rem;

	background: @color-s16col-bg;
	height: 14rem;
	margin-bottom: 0.9rem;

	canvas {
		width: 100%;
		height: 10rem;
		object-fit: contain;
	}

	.buttons {
		.flexParent();
		align-items: center;

		button {
			border: none;
			padding: 0.5rem;
			background-color: @color-main-bg;
		}
	}
}

s16-image {
	animation: fixfit 0.1s normal;

	canvas {
		max-width: 100%;
		max-height: 100%;
		object-fit: contain;
		width: auto;
	}
}

.accordion {
	margin-bottom: 1rem;

	.accordion-opener {
		display: inline-block;
		width: 100%;
		padding: 1rem;
		background-color: @color-accordion-header-bg;
		cursor: pointer;
	}

	.accordion-content {
		display: none;
	}

	.when-open {
		opacity: 0;
	}

	&.active .when-open {
		opacity: 1;
	}

	&.active .accordion-content {
		.flexParent(row);
	}
}

#sprites .accordion-content {

	s16-collection {
		.flexChild(0 1 31%);
		width: 31%;
	}
}

main {
	.flexChild(1 1);
	padding: 1rem;
}

h1 {
	color: white;
}

// Range sliders
input[type="range"] {
	-webkit-appearance:none;
	width:100%;
	height:20px;

	background: @color-range-bg;
	background-size:150px 10px;
	background-position:center;
	background-repeat:no-repeat;
	overflow:hidden;
	outline: none;

	&::-webkit-slider-thumb{
		-webkit-appearance:none;
		width:20px;
		height:20px;
		background: @color-range-thumb;
		position:relative;
		z-index:3;
		box-shadow:0 0 5px 0 rgba(0,0,0,0.3);
	}

	&::-webkit-slider-thumb:after{
		content:" ";
		width:160px;
		height:10px;
		position:absolute;
		z-index:1;
		right:20px;
		top:5px;
		background: @color-range-thumb;
		background: linear-gradient(to right, #f088fc 1%, #AC6CFF 70%);
	}
}

.context-menu-list {
	background: @color-context-bg;
	border: 1px solid black;

	li {
		background-color: @color-context-bg;
		color: white;
	}
}

.name-letter-table {
	margin-bottom: 1rem;

	.name-letter-header {
		td {
			background-color: @color-letter-header-bg;
			padding: 1rem;
			cursor: pointer;
		}
	}

	tbody tr td {
		padding: 1rem;
	}

	tbody tr:nth-child(even) td {
		background-color: @color-tr-odd;
	}

	tbody, tfoot {
		display: none;
	}

	.when-open {
		display: none;
	}

	&.active .when-open {
		display: initial;
	}

	&.active tbody,
	&.active tfoot {
		display: table-row-group;
	}

	a.delete {
		color: white;
		text-decoration: underline;
	}

	tfoot td {
		padding: 1rem 1rem 0;

		input {
			background-color: @color-letter-header-bg;
			border: 1px solid black;
			height: 2.5rem;
			width: 20rem;
			padding: 0.5rem;
		}
	}

	.gender {
		cursor: pointer;
	}

	.gender.inactive {
		-webkit-filter: grayscale(100%);
		opacity: 0.7;
	}
}

#about {
	h1 {
		display: inline-block;
		margin-right: 1rem;
		margin-bottom: 1rem;
	}
}

.connecting-info {
	padding: 1rem;
	background-color: @color-two;
}

.connect-to-network {
	flex-direction: column;
}

#login-network,
#register-network {
	margin: auto;
	padding: 1rem;
	flex-direction: column;
	min-width: 50vw;

	> * {
		flex: 1 1;
		align-self: stretch;
	}
}

@import "caos.less";

.st0{fill:#FFFFFF;}
.st1{fill:#FFFFFF;stroke:#FFFFFF;stroke-width:1.5;stroke-linejoin:round;stroke-miterlimit:10;}
.st2{fill:none;stroke:#FFFFFF;stroke-width:1.0281;stroke-miterlimit:10;}
.st3{fill:#FFFFFF;}

// This is a silly animation that will force a redraw of the element
// which is what we need to fix the object-fit property
@keyframes fixfit {
	from {
		outline: 0px solid;
		outline-color: transparent;
	}
	50% {
		outline: 1px solid;
		outline-color: transparent;
	}
	to {
		outline: 0px solid;
		outline-color: transparent;
	}
}